<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>version control on INBO Tutorials</title>
    <link>/tags/version-control/</link>
    <description>Recent content in version control on INBO Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="/tags/version-control/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handle Git conflicts via GitHub.Com</title>
      <link>/tutorials/git_merge_conflict/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/git_merge_conflict/</guid>
      <description>Fix merge conflict with a pull request Sometimes a pull request warns about a merge conflict. A merge conflict occurs when one or more lines were altered in the base branch so that a merge conflict arises in the feature branch. The warning looks like the image below.
You can fix most merge conflicts in the browser. First push the Resolve conflict button in the warning. The website sends you to a page with a list of all merge conflicts.</description>
    </item>
    
    <item>
      <title>Set up Zenodo - GitHub integration</title>
      <link>/tutorials/git_zenodo/</link>
      <pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/git_zenodo/</guid>
      <description>Note: there is also a vignette in the checklist package for R, that covers below topics and more, such as integration with ORCID. If you are working with R and wish to control some of the below steps from R, then definitely read the vignette!
GitHub and Zenodo: background GitHub hosts a remote Git server that you can use for distributed version control with Git. For more information about Git and GitHub, see other tutorials on this website!</description>
    </item>
    
    <item>
      <title>Git(hub) introduction</title>
      <link>/tutorials/git_introduction/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/git_introduction/</guid>
      <description>At INBO, people do write code and require version control. As git is not the most straightforward environment to work with for non-IT specialists, we try to define our own sub-ecosystem with relevant practices and an achievable workflow.
To introduce the concept of version control with Git and Github, a separate git course website is available here.
The git course provides an introduction on main terminology of Git based on 5 important tasks:</description>
    </item>
    
    <item>
      <title>Undo a git commit</title>
      <link>/tutorials/git_undo_commit/</link>
      <pubDate>Wed, 18 Oct 2017 15:31:53 +0200</pubDate>
      
      <guid>/tutorials/git_undo_commit/</guid>
      <description>Introduction You notice you have done something wrong on your branch. No worries, erroneous commits can be undone or reverted.
First, check your history of commits to see which commits are the faulty ones.
git log --oneline Example output
b7119f2 Continue doing crazy things 872fa7e Try something crazy a1e8fb5 Make some important changes to hello.py 435b61d Create hello.py 9773e52 Initial import Git checkout The git checkout command serves three distinct functions: checking out files, checking out commits, and checking out branches.</description>
    </item>
    
    <item>
      <title>Git without internet</title>
      <link>/tutorials/git_no_internet/</link>
      <pubDate>Wed, 18 Oct 2017 15:30:15 +0200</pubDate>
      
      <guid>/tutorials/git_no_internet/</guid>
      <description>When working off line, two Git tasks cannot be performed: fetching/pulling updates from the server, and pushing changes to the server. All other commands still work.
One can commit changes, branch off, revert and reset changes, the same as when there exists an internet connection.
Example workflow: start offline mode
while(notBored): commit changes add files branch off new features end offline mode
update master branch
git fetch origin push changes to the server</description>
    </item>
    
    <item>
      <title>Git workflow using the command line</title>
      <link>/tutorials/git_workflow/</link>
      <pubDate>Wed, 18 Oct 2017 14:42:43 +0200</pubDate>
      
      <guid>/tutorials/git_workflow/</guid>
      <description>BEFORE I START WORKING   STEP 1: Update the master branch on my PC to make sure it is aligned with the remote master
git fetch origin git checkout master git merge --ff-only origin/master   STEP 2: Choose your option:
  OPTION 2A: I already have a branch I want to continue working on:
Switch to existing topic branch:
git checkout name_existing_branch git fetch origin git rebase origin/master   OPTION 2B: I&amp;rsquo;ll make a new branch to work with: Create a new topic branch from master(!</description>
    </item>
    
    <item>
      <title>Handle conflicts</title>
      <link>/tutorials/git_conflict/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/git_conflict/</guid>
      <description>Fix merge conflict with a pull request You have made some changes to a feature branch. Make a pull request on the server. The standard case of automatic merge is not possible. Push your latest changes from the feature branch to the server.
Locally on your computer:
git fetch origin Rebase your feature branch with your master
git rebase origin/master Git will now state that there are merge conflicts. These will look like this:</description>
    </item>
    
    <item>
      <title>Git configuration</title>
      <link>/installation/user/user_install_git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/user/user_install_git/</guid>
      <description>Windows  Download gitconfig. Bewaar het bestand als .gitconfig (bestandsnaam start met een punt) in C:/users/username. Open .gitconfig (rechtsklikken op het bestand en openen met bijvoorbeeld Notepad++) en vul jouw naam en e-mail aan. Sla het bestand op.  Ubuntu Doe dezelfde stappen als onder Windows. Alleen bewaar je het bestand als ~/.gitconfig.</description>
    </item>
    
    <item>
      <title>Git installation</title>
      <link>/installation/administrator/admin_install_git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/administrator/admin_install_git/</guid>
      <description>Windows De installatiebestanden zijn beschikbaar via http://git-scm.com/downloads
 Installeer eerst notepad++. Voer het installatiebestand uit en klik Ja. Welkom bij de installatie: klik op Next. Aanvaard de licentievoorwaarden door Next te klikken. Installeer git in de voorgestelde standaard directory. Gebruik de standaard componenten door Next te klikken. Klik Next om de menu map in te stellen. Kies Notepad++ als editor. Kies use Git from the command line en klik Next. Use OpenSSL library en klik Next.</description>
    </item>
    
  </channel>
</rss>
