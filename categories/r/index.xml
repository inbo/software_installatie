<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r on INBO Tutorials</title>
    <link>https://inbo.github.io/tutorials/categories/r/</link>
    <description>Recent content in r on INBO Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://inbo.github.io/tutorials/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coordinate operations and maps in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs_2/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs_2/</guid>
      <description>Introduction and setup This tutorial originated while preparing an R-demonstration during a GIS club at INBO on 16 September 2021. (Further material of the GIS club is available here.)
A straightforward approach for transforming spatial data is available in another tutorial. The current tutorial tackles a few extra aspects.
The tutorial assumes you have some pre-existing knowledge:
 Basic knowledge about coordinate reference systems (CRSs) and geodetic datums; see another tutorial and the references and links therein.</description>
    </item>
    
    <item>
      <title>Citations in R Markdown</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_citations_markdown/</link>
      <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_citations_markdown/</guid>
      <description>Enter VME mode With the advent of RStudio version 1.4+, working with bibliographies and citing documents in R Markdown has much improved. In this tutorial we focus on best practices to further ease the citation experience when working with R Markdown documents. We also give some guidelines specific to the Research Institute for Nature and Forest.
More general tutorials can be found at the following web pages:
 https://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html https://rstudio.github.io/visual-markdown-editing/#/citations  The latter webpage is part of the documentation about the Visual Markdown Editing (VME) mode that is available since RStudio 1.</description>
    </item>
    
    <item>
      <title>Goodbye PROJ.4! How to specify a coordinate reference system in R?</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_crs_coding/</link>
      <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_crs_coding/</guid>
      <description>Coordinate reference systems: minimal background What? A coordinate reference system (CRS) – also called spatial reference system (SRS) – is what you need if you want to interpret numeric coordinates as actual point locations with reference to the Earth. Two types of coordinate reference system exist: geodetic and projected CRSs. The former serve only to locate coordinates relative to a 3D model of the Earth surface, while the latter add a projection to generate coordinates on a 2D map.</description>
    </item>
    
    <item>
      <title>Using WFS service in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_wfs_services/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_wfs_services/</guid>
      <description>What is WFS? In computing, the Open Geospatial Consortium (OGC) Web Feature Service (WFS) Interface Standard provides an interface allowing requests for geographical features across the web using platform-independent calls. One can think of geographical features as the “source code” behind a map, whereas the Web Mapping Service (WMS) interface or online tiled mapping portals like Google Maps return only an image, which end-users cannot edit or spatially analyze.
The standard output format for reading or downloading data from a WFS is the XML-based Geography Markup Language (GML), but other formats like shapefiles or geojson are also available.</description>
    </item>
    
    <item>
      <title>Updating the renv environment of an R project</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_renv_update/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_renv_update/</guid>
      <description>What is renv? renv is an R package that provides tools to save the version of R and all packages used in a particular directory with R code (e.g. an RStudio project directory), and to reproduce (recreate) this environment on another (or your future) system. Because software versions can have important effects on the results of your work, it is important to be able to reproduce versions.
Start using renv For general advice on renv setup and usage, see https://rstudio.</description>
    </item>
    
    <item>
      <title>(Down)load KNMI, KMI or MOW-HIC data using the inborutils package</title>
      <link>https://inbo.github.io/tutorials/tutorials/inborutils_download_data/</link>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/inborutils_download_data/</guid>
      <description>In this article of the inborutils package it is explained how to use the functions download_knmi_data_hour, read_knmi_data, read_mow_data and read_kmi_data.</description>
    </item>
    
    <item>
      <title>Statistics courses @ INBO!</title>
      <link>https://inbo.github.io/tutorials/articles/inbo_stats_courses/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/articles/inbo_stats_courses/</guid>
      <description>During the course of the years, we have taught many statistics courses at the Research Institute for Nature and Forest (INBO), both for scientists and technicians. Most of these courses have been developed and taught in-house. Some (mostly advanced) courses were taught in-house by external teachers.
While we do plan to periodically repeat these courses for new employees and as a refresher, the course material can always be consulted and used for self-teaching or as a reference.</description>
    </item>
    
    <item>
      <title>Software by INBO: packages for environmentalists and ecologists!</title>
      <link>https://inbo.github.io/tutorials/articles/inbo_software/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/articles/inbo_software/</guid>
      <description>At the Research Institute for Nature and Forest (INBO), we are eager to sustain, promote and develop open-source software that is relevant to biodiversity researchers! This page lists R and Python packages which INBO developed or made a significant contribution to. Several of these packages continue being developed.
Please, feel free to try out packages! If you encounter a problem or if you have a suggestion, we encourage you to post an issue on the package’s code repository.</description>
    </item>
    
    <item>
      <title>Tutorial setup_codingclub_session()</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_setup_codingclub_session/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_setup_codingclub_session/</guid>
      <description>Before each coding club you will usually have to download some datasets and some scripts. This can be done manually from the corresponding GitHub webpages but it is much easier to use the setup_codingclub_session() function of the inborutils package.
To begin, make sure that you have the latest version of inborutils installed by running the following code:
if (!&amp;#34;remotes&amp;#34; %in% rownames(installed.packages())) { install.packages(&amp;#34;remotes&amp;#34;) } remotes::install_github(&amp;#34;inbo/inborutils&amp;#34;) Next load the package:
library(inborutils) The function takes four arguments with the following default settings:</description>
    </item>
    
    <item>
      <title>Read data from Google sheets</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_google_sheets/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_google_sheets/</guid>
      <description>googlesheets4 The R package googlesheets4 provides the functionality to read and write data from a Google sheet.
This package is very well documented, so we just have to provide you with the right links:
 read sheets write sheets  There are also two specific in-depth articles: one about reading and one about writing sheets.
A complete list of vignettes can be found in the Articles page.
googlesheets4 vs googlesheets The package googlesheets4 is the follower of googlesheets which doesn&amp;rsquo;t work anymore as it is built on the outdated Sheets v3 API.</description>
    </item>
    
    <item>
      <title>How to use open raster file formats in R: GeoTIFF &amp; GeoPackage</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_standards_raster/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_standards_raster/</guid>
      <description>General note: the way the raster package handles coordinate reference systems has just recently (at the time of writing) become compliant with recent GDAL 3 and PROJ &amp;gt;= 6 versions. At the time of writing, it was necessary to use the current development version of raster (link). During the current transition period of supporting both old and new PROJ/GDAL, you may get a decent portion of proj4string-related warnings when running the below code (as seen below), but you can safely ignore them.</description>
    </item>
    
    <item>
      <title>Transforming spatial objects</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs/</guid>
      <description>General note: migration to the more actively developed sf package is currently advised by the sp maintainer. The sp package, used in this tutorial, is still maintained in order to support the newest versions of the GDAL and PROJ backends.
Sometimes we have a layer in one coordinate reference system (CRS) and need to transform it into another coordinate reference system. The first thing we need to do is identifying both coordinate reference systems.</description>
    </item>
    
    <item>
      <title>&#39;Zoom in&#39; on `ggplot2` figures</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_zoom_in_ggplot/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_zoom_in_ggplot/</guid>
      <description>Original figure library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.0.2  ggplot(mtcars, aes(x = factor(cyl), y = mpg)) + geom_boxplot() “Zoom in” with scales Data points outside the limits are considered to be NA. Note that this will alter all calculated geoms.
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) + geom_boxplot() + scale_y_continuous(limits = c(20, 25)) ## Warning: Removed 24 rows containing non-finite values (stat_boxplot).  “Zoom in” with coord This doesn’t affect the values:</description>
    </item>
    
    <item>
      <title>Mixed model formulation of a paired t-test</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_paired_t_test/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_paired_t_test/</guid>
      <description>What you will learn In this tutorial we explain the analogy between the paired t-test and the corresponding mixed model formulation.
Used packages library(knitr) library(lme4) library(tidyr) library(broom) library(DHARMa) Data  plot: identifies paired measurements response: measurement values treatment: identifies two treatments (a and b)  set.seed(124) paired_data &amp;lt;- data.frame( plot = rep(1:10, 2), response = c(rnorm(10), rnorm(10, 3, 1.5)), treatment = rep(c(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;), each = 10) ) paired_data$treatment &amp;lt;- as.factor(paired_data$treatment) paired_data$plot &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>Same variable in fixed and random effects</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_fixed_random/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_fixed_random/</guid>
      <description>Used packages library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.0.2  library(lme4) ## Loading required package: Matrix  Dummy data For the sake of this demontration we use a very simple dataset with a very high signal versus noise ratio. Let’s look at a simple timeseries with multiple observations per timepoint.
set.seed(213354) n.year &amp;lt;- 30 n.replicate &amp;lt;- 10 sd.noise &amp;lt;- 0.1 dataset &amp;lt;- expand.grid( Replicate = seq_len(n.replicate), Year = seq_len(n.</description>
    </item>
    
    <item>
      <title>Spatially correlated random effects with INLA</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_spde/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_spde/</guid>
      <description>This document is a quick and dirty illustration of how spatially correlated random effect can be fit with INLA. It is based on the question and the data posted on the R-Sig-mixedmodels mailing list: https://stat.ethz.ch/pipermail/r-sig-mixed-models/2016q3/024938.html.
library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union  library(tidyr) library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.</description>
    </item>
    
    <item>
      <title>Zero-inflation</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_zero_inflation/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_zero_inflation/</guid>
      <description>Used packages library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.0.2  library(scales) library(pscl) ## Warning: package &#39;pscl&#39; was built under R version 4.0.2 ## Classes and Methods for R developed in the ## Political Science Computational Laboratory ## Department of Political Science ## Stanford University ## Simon Jackman ## hurdle and zeroinfl functions by Achim Zeileis  library(MASS) library(tidyr) library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following object is masked from &#39;package:MASS&#39;: ## ## select ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union  library(lme4) ## Loading required package: Matrix ## ## Attaching package: &#39;Matrix&#39; ## The following objects are masked from &#39;package:tidyr&#39;: ## ## expand, pack, unpack  Lots of zero’s doesn’t imply zero-inflation set.</description>
    </item>
    
    <item>
      <title>How to use open vector file formats in R: GeoPackage &amp; GeoJSON</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_standards_vector/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_standards_vector/</guid>
      <description>This tutorial uses a few basic functions from the dplyr and sf packages. While only a few functions are used, you can use the previous hyperlinks to access the tutorials (vignettes) of these packages for more functions and information.
options(stringsAsFactors = FALSE) library(tidyverse) library(sf) library(inborutils) You will find a bit more background about ‘why and what’, regarding the considered open standards, in a separate post on this website.
In short, the GeoPackage and GeoJSON formats are ideal for exchange, publication, interoperability &amp;amp; durability and to open science in general.</description>
    </item>
    
    <item>
      <title>Meet some popular open geospatial standards!</title>
      <link>https://inbo.github.io/tutorials/articles/geospatial_standards/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/articles/geospatial_standards/</guid>
      <description>Some inspiration for this post came from the beautiful books of Lovelace et al. (2020), Pebesma &amp;amp; Bivand (2019) and Hijmans (2019), and from various websites.
Why use open standards?  Open file standards ease collaboration, portability and compatibility between users, machines and applications. Their (file) structure is fully documented.  Consequently, scientists and programmers can build new software / packages and make innovations that use these standards, while maintaining interoperability with existing applications.</description>
    </item>
    
    <item>
      <title>Classification and visualisation of estimates and their uncertainty</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_effectclass/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_effectclass/</guid>
      <description>Here are the slides of a presentation about the effectclass package.</description>
    </item>
    
    <item>
      <title>Match scientific names with the GBIF Backbone Taxonomy</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_gbif_name_matching/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_gbif_name_matching/</guid>
      <description>Introduction This tutorial will explain how you can match a list of scientific names against the GBIF backbone taxonomy.
It is important that you have the most recent version of inborutils installed and available:
remotes::install_github(&amp;#34;inbo/inborutils&amp;#34;) # install inborutils library(tidyverse) # To do datascience library(rgbif) # To lookup names in the GBIF backbone taxonomy library(inborutils) # To wrap GBIF API data library(knitr) Read data file containing the scientific names Read file containing the scientific names you want to check against the GBIF taxonomic backbone:</description>
    </item>
    
    <item>
      <title>How to make spatial joins (point in polygon)?</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_point_in_polygon/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_point_in_polygon/</guid>
      <description>library(R.utils) library(rgdal) library(tidyverse) library(leaflet) library(sp) library(sf) library(rgbif) library(DBI) What we want to do In this short tutorial, we explore various options to deal with the situation where we have (1) a spatially referenced GIS file with polygons and (2) a spatially referenced set of points that overlaps with the GIS polygons.
Typically, both data sources contain information (apart from the spatial locations) that needs to be related to each other in some way.</description>
    </item>
    
    <item>
      <title>Applying the INBO corporate identity to bookdown documents</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_inbomd/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_inbomd/</guid>
      <description>During this workshop you learn how to turn a regular Rmarkdown file into a bookdown document using the INBO corporate identity. A lot of tips and trics use plain bookdown. So you can use them with other bookdown output formats.
The slides are available on the INBOmd examples website.
The source code is avalaible in the INBOmd example GitHub repository.</description>
    </item>
    
    <item>
      <title>R voor beginners</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_beginners/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_beginners/</guid>
      <description>Doel van de cursus Hoe maak je van je ingezamelde gegevens een reproduceerbare analyse, visualisatie en rapportage, gebruik makend van de software R en Rstudio.
 Rstudio kunnen gebruiken (Les 1a) Commando&amp;rsquo;s uitvoeren vanuit een script (Les 1b) Externe databestanden inlezen in R (Les 2a) Gegevens visualiseren (ggplot2) (Les 2b) Data manipuleren in een gewenste vorm (dplyr) (Les 3) Reproduceerbaar analyserapport maken (Rmarkdown) + algemene vragen (Les 4)  Bovenstaande topics worden gecombineerd in een opleiding van 4 workshops.</description>
    </item>
    
    <item>
      <title>INLA workshops</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_inla/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_inla/</guid>
      <description>These workshops are a follow-up of the course on &amp;ldquo;Spatial, temporal and spatial-temporal models using R-INLA&amp;rdquo; by Alain Zuur and Elena Ieno (Highland Statistics Ltd.). The main goal is the get people using R-INLA with their own data in a workshop setting so they can tap into the knowledge of others. The workshops are not a copy of the Highstat course but elaborate certain topics. We also introduce the inlatools and inlabru.</description>
    </item>
    
    <item>
      <title>Headers and navigation in R code</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_script_sections/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_script_sections/</guid>
      <description>Introduction R code can become elaborate and consequently unclear or difficult to navigate. Yet, it is possible to introduce headers and navigate through them.
Creating sections manually To create a header of a section, different methods can be applied. Any comment line which includes at least four trailing dashes (-), equal signs (=), or hash tags (#) automatically creates a code section.
# 1. Header 1 #### # 2. Header 2 ---- # 3.</description>
    </item>
    
    <item>
      <title>Let&#39;s create an interactive map!</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_create_leaflet_map/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_create_leaflet_map/</guid>
      <description>General note: migration to the more actively developed sf package is currently advised by the sp maintainer. The sp package, used in this tutorial, is still maintained in order to support the newest versions of the GDAL and PROJ backends.
Introduction The required packages are leaflet and sp.
library(leaflet) library(sp) Dummy data Let’s create a dummy data.frame to play around, i.e. the three locations of INBO:
names &amp;lt;- c(&amp;#34;VAC HT&amp;#34;, &amp;#34;Geraardsbergen&amp;#34;, &amp;#34;Linkebeek&amp;#34;) lat &amp;lt;- c(50.</description>
    </item>
    
    <item>
      <title>Using `%&gt;%` pipes in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_tidyverse_piping/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_tidyverse_piping/</guid>
      <description>library(dplyr) How to use piping in R Normally, you would do this:
head(mtcars) ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.</description>
    </item>
    
    <item>
      <title>Using WMS service in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_wms_services/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_wms_services/</guid>
      <description>WMS stands for Web Map Service. The service provides prerendered tiles at different scales. This makes it useful to include them as background images in maps.
wms_grb links to the WMS of the GRB-basiskaart, the Flemish cadastral map. It depicts land parcels, buildings, watercourses, roads and railroads.
wms_ortho contains a mosaic of recent orthophotos made during the winter. The layer Ortho contains the images, the layer Vliegdagcontour detail on the time when the pictures were taken.</description>
    </item>
    
    <item>
      <title>Data wrangling with tidyverse</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_tidyverse_info/</link>
      <pubDate>Fri, 09 Feb 2018 14:14:49 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_tidyverse_info/</guid>
      <description>Real life datasources seldom provide data in exactly the format you need for the analysis. Hence most of the time you need to manipulate the data after reading it into R. There are several ways to do this, each with their pros and cons. We highly recommend the tidyverse collection of packages. The command library(tidyverse) will actually load the following packages: ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr and forecats.</description>
    </item>
    
    <item>
      <title>Reading large data files in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_large_data_files_handling/</link>
      <pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_large_data_files_handling/</guid>
      <description>Intro R is known to have difficulties handling large data files. Here we will explore some tips that make working with such files in R less painfull.
tl;dr  If you can comfortably work with the entire file in memory, but reading the file is rather slow, consider using the data.table package and read the file with its fread function. If your file does not comfortably fit in memory:  Use sqldf if you have to stick to csv files.</description>
    </item>
    
    <item>
      <title>Read data from INBO databases (SQL Server) with R</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_database_access/</link>
      <pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_database_access/</guid>
      <description>Connection to INBO database Here we provide the approach using the package DBI, which is also used by RStudio.[1]. This package enables the link between R and the (remote) database. After installation of the needed packages (install.packages(c(&amp;quot;DBI&amp;quot;, &amp;quot;glue&amp;quot;, &amp;quot;tidyverse&amp;quot;))), the packages can be loaded:
library(DBI) library(glue) library(tidyverse) To create a database connection, different approaches are available as explained in the next section:
 Use the dedicated connect_inbo_dbase function in the inbodb package Setup the required parameters yourself Reuse existing registered connections on your computer  Inbodb function To support the connection to INBO databases, a dedicated function is available in the inbodb package, called connect_inbo_dbase.</description>
    </item>
    
  </channel>
</rss>
